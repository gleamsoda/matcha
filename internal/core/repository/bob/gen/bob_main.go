// Code generated by BobGen psql v0.22.0. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package bobgen

import (
	"context"

	"github.com/stephenafamo/bob/dialect/psql"
	"github.com/stephenafamo/bob/dialect/psql/dialect"
)

var TableNames = struct {
	Issues string
}{
	Issues: "issues",
}

var ColumnNames = struct {
	Issues issueColumnNames
}{
	Issues: issueColumnNames{
		ID:          "id",
		Title:       "title",
		Description: "description",
		CreatedAt:   "created_at",
	},
}

var (
	SelectWhere = Where[*dialect.SelectQuery]()
	InsertWhere = Where[*dialect.InsertQuery]()
	UpdateWhere = Where[*dialect.UpdateQuery]()
	DeleteWhere = Where[*dialect.DeleteQuery]()
)

func Where[Q psql.Filterable]() struct {
	Issues issueWhere[Q]
} {
	return struct {
		Issues issueWhere[Q]
	}{
		Issues: IssueWhere[Q](),
	}
}

var (
	SelectJoins = getJoins[*dialect.SelectQuery]
	UpdateJoins = getJoins[*dialect.UpdateQuery]
	DeleteJoins = getJoins[*dialect.DeleteQuery]
)

type joinSet[Q any] struct {
	InnerJoin Q
	LeftJoin  Q
	RightJoin Q
}

type joins[Q dialect.Joinable] struct {
}

func getJoins[Q dialect.Joinable](ctx context.Context) joins[Q] {
	return joins[Q]{}
}
